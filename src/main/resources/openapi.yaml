openapi: 3.0.4
info:
  title: Student API
  version: 1.0.0
  description: API para gestionar colegio
servers:
  - url: http://localhost:8082
tags:
  - name: student
    description: Operations about student
  - name: teacher
    description: Operations about teacher
paths:
  /students:
    get:
      tags:
        - student
      summary: Get all student.
      description: Get all student status.
      operationId: getAllStudents
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseStudentDto'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - student
      summary: Create student.
      description: Create student in database.
      operationId: createStudent
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestStudentDto'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStudentDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /students/actives:
    get:
      tags:
        - student
      summary: Get all student actives.
      description: Get all student status actives.
      operationId: getAllStudentsActives
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseStudentDto'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /teachers:
    get:
      tags:
        - teacher
      summary: Get all teacher.
      description: Get all teacher.
      operationId: getAllTeachers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseTeacherDto'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - teacher
      summary: Create teacher.
      description: Create teacher in database.
      operationId: createTeacher
      requestBody:
        description: Created teacher object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTeacherDto'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTeacherDto'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    RequestStudentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        document:
          type: string
          example: 78653423
        name:
          type: string
          example: Jhon
        lastName:
          type: string
          example: James
        status:
          type: boolean
          example: true
        age:
          type: integer
          format: int32
          example: 30

    ResponseStudentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        document:
          type: string
          example: 78653423
        name:
          type: string
          example: Jhon
        lastName:
          type: string
          example: James
        status:
          type: boolean
          example: true
        age:
          type: integer
          format: int32
          example: 30

    RequestTeacherDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        document:
          type: string
          example: 45453245
        name:
          type: string
          example: Jhon
        lastName:
          type: string
          example: James
        status:
          type: boolean
          example: true
        age:
          type: integer
          format: int32
          example: 30

    ResponseTeacherDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        document:
          type: string
          example: 45453245
        name:
          type: string
          example: Jhon
        lastName:
          type: string
          example: James
        status:
          type: boolean
          example: true
        age:
          type: integer
          format: int32
          example: 30

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message